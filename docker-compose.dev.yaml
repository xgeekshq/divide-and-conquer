version: "3.9"

services:
  backend:
    build:
      context: backend # starts on backend folder instead on root
      target: development # choose development part from Dockerfile
      dockerfile: docker/dev/Dockerfile

    # image name
    image: dc-dev-backend

    # container name
    container_name: dev-backend

    networks:
      - dc-network
    depends_on:
      - mongo

    env_file:
      - ./backend/.env

    # restart strategy
    restart: unless-stopped

    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules

    ports:
      - 3200:3200
      # debugging port
      # - 9229:9229

  frontend:
    build:
      context: frontend # to start on frontend folder
      dockerfile: docker/dev/Dockerfile # path to dev Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL:-http://localhost:3200}
        - NEXT_PUBLIC_NEXTAUTH_URL=${NEXT_PUBLIC_NEXTAUTH_URL:-http://localhost:3000}
        - NEXT_PUBLIC_ENABLE_AZURE=${NEXT_PUBLIC_ENABLE_AZURE}

    # set image name
    image: dc-dev-frontend

    # set container name
    container_name: dev-frontend

    networks:
      - dc-network
    depends_on:
      - backend

    env_file:
      - ./frontend/.env

    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules

    # restart strategy
    restart: unless-stopped

    # set ports
    ports:
      - 3000:3000

  mongo2:
    image: mongo
    restart: always
    container_name: mongo2
    networks:
      - dc-network
    ports:
      - "27018:27017"
    entrypoint: "bash -c '/usr/bin/mongod --replSet $${MONGO_REPLICA_NAME} --journal --bind_ip_all'"
    env_file:
      - ./database/.env
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./database/rs-init.sh:/scripts/rs-init.sh
    networks:
      - dc-network
    links:
      - mongo2
    command: "bash -c '/usr/bin/mongod --replSet $${MONGO_REPLICA_NAME} --journal --bind_ip_all'"
    env_file:
      - ./database/.env

# Networks
networks:
  dc-network:
    driver: bridge
